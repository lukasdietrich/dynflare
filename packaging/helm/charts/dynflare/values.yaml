# Default values for dynflare.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/lukasdietrich/dynflare
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations:
  - key: CriticalAddonsOnly
    operator: Exists

  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule

affinity: {}

extraObjects: []
  # - |
  #   apiVersion: v1
  #   kind: Secret
  #   metadata:
  #     name: dynflare-secret
  #   stringData:
  #     cloudflare-token: hunter2
  #     notification-url: slack://botname@token

dynflare:
  log:
    level: info

  notification:
    # - urlSecretRef:
    #     name: dynflare-secret
    #     key: notification-url

  nameserver:
    # - provider: cloudflare
    #   credentialsSecretRef:
    #     name: dynflare-secret
    #     key: cloudflare-token
    #   zones:
    #     - example.com

  domain:
    # - name: ${K8S_NODE_NAME}.example.com
    #   zone: example.com
    #   filter: |
    #     IsV6()
